{"version":3,"sources":["MenuList.tsx"],"names":["AnimatedView","Animated","createAnimatedComponent","BlurView","MenuListComponent","state","theme","menuProps","itemList","setItemList","React","useState","menuHeight","itemsWithSeparator","value","items","filter","item","withSeparator","length","prevList","messageStyles","translate","anchorPosition","itemWidth","_leftPosition","menuScaleAnimation","CONTEXT_MENU_STATE","ACTIVE","SPRING_CONFIGURATION_MENU","duration","HOLD_ITEM_TRANSFORM_DURATION","opacityAnimation","left","height","opacity","transform","translateX","beginningTransformations","translateY","scale","endingTransformations","animatedInnerContainerStyle","backgroundColor","IS_IOS","animatedProps","tint","setter","_items","styles","menuContainer","StyleSheet","absoluteFillObject","menuInnerContainer","MenuList","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport Animated, {\n  runOnJS,\n  useAnimatedProps,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport {\n  calculateMenuHeight,\n  menuAnimationAnchor,\n} from '../../utils/calculations';\nimport { BlurView } from 'expo-blur';\n\nimport MenuItems from './MenuItems';\n\nimport {\n  SPRING_CONFIGURATION_MENU,\n  HOLD_ITEM_TRANSFORM_DURATION,\n  IS_IOS,\n  CONTEXT_MENU_STATE,\n} from '../../constants';\n\nimport styles from './styles';\nimport { MenuItemProps } from './types';\nimport { useInternal } from '../../hooks';\nimport { deepEqual } from '../../utils/validations';\nimport { leftOrRight } from './calculations';\n\nconst AnimatedView = Animated.createAnimatedComponent(BlurView);\n\nconst MenuListComponent = () => {\n  const { state, theme, menuProps } = useInternal();\n\n  const [itemList, setItemList] = React.useState<MenuItemProps[]>([]);\n\n  const menuHeight = useDerivedValue(() => {\n    const itemsWithSeparator = menuProps.value.items.filter(\n      item => item.withSeparator\n    );\n    return calculateMenuHeight(\n      menuProps.value.items.length,\n      itemsWithSeparator.length\n    );\n  }, [menuProps]);\n  const prevList = useSharedValue<MenuItemProps[]>([]);\n\n  const messageStyles = useAnimatedStyle(() => {\n    const itemsWithSeparator = menuProps.value.items.filter(\n      item => item.withSeparator\n    );\n\n    const translate = menuAnimationAnchor(\n      menuProps.value.anchorPosition,\n      menuProps.value.itemWidth,\n      menuProps.value.items.length,\n      itemsWithSeparator.length\n    );\n\n    const _leftPosition = leftOrRight(menuProps);\n\n    const menuScaleAnimation = () =>\n      state.value === CONTEXT_MENU_STATE.ACTIVE\n        ? withSpring(1, SPRING_CONFIGURATION_MENU)\n        : withTiming(0, {\n            duration: HOLD_ITEM_TRANSFORM_DURATION,\n          });\n\n    const opacityAnimation = () =>\n      withTiming(state.value === CONTEXT_MENU_STATE.ACTIVE ? 1 : 0, {\n        duration: HOLD_ITEM_TRANSFORM_DURATION,\n      });\n\n    return {\n      left: _leftPosition,\n      height: menuHeight.value,\n      opacity: opacityAnimation(),\n      transform: [\n        { translateX: translate.beginningTransformations.translateX },\n        { translateY: translate.beginningTransformations.translateY },\n        {\n          scale: menuScaleAnimation(),\n        },\n        { translateX: translate.endingTransformations.translateX },\n        { translateY: translate.endingTransformations.translateY },\n      ],\n    };\n  });\n\n  const animatedInnerContainerStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor:\n        theme.value === 'light'\n          ? IS_IOS\n            ? 'rgba(255, 255, 255, .75)'\n            : 'rgba(255, 255, 255, .95)'\n          : IS_IOS\n          ? 'rgba(0,0,0,0.5)'\n          : 'rgba(39, 39, 39, .8)',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return { tint: theme.value };\n  }, [theme]);\n\n  const setter = (items: MenuItemProps[]) => {\n    setItemList(items);\n    prevList.value = items;\n  };\n\n  useAnimatedReaction(\n    () => menuProps.value.items,\n    _items => {\n      if (!deepEqual(_items, prevList.value)) {\n        runOnJS(setter)(_items);\n      }\n    },\n    [menuProps]\n  );\n\n  return (\n    <AnimatedView\n      intensity={100}\n      animatedProps={animatedProps}\n      style={[styles.menuContainer, messageStyles]}\n    >\n      <Animated.View\n        style={[\n          StyleSheet.absoluteFillObject,\n          styles.menuInnerContainer,\n          animatedInnerContainerStyle,\n        ]}\n      >\n        <MenuItems items={itemList} />\n      </Animated.View>\n    </AnimatedView>\n  );\n};\n\nconst MenuList = React.memo(MenuListComponent);\n\nexport default MenuList;\n"]}